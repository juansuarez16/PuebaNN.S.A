{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cargos/cargo.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CargoComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cargo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r1.nombre);\n  }\n}\nexport class CargoComponent {\n  constructor(cargoService) {\n    this.cargoService = cargoService;\n    this.cargos = [];\n    this.nuevoCargo = {\n      id: 0,\n      nombre: ''\n    }; // Inicialización con valores predeterminados\n  }\n\n  ngOnInit() {\n    this.getAllCargos();\n  }\n  getAllCargos() {\n    this.cargoService.getAllCargos().subscribe(cargos => this.cargos = cargos, error => console.error(error));\n  }\n  crearCargo() {\n    this.cargoService.createCargo(this.nuevoCargo).subscribe(cargo => {\n      this.cargos.push(cargo);\n      this.nuevoCargo = {\n        id: 0,\n        nombre: ''\n      }; // Limpiar el formulario\n    }, error => console.error(error));\n  }\n  actualizarCargo(id, cargo) {\n    this.cargoService.updateCargo(id, cargo).subscribe(updatedCargo => {\n      const index = this.cargos.findIndex(c => c.id === id);\n      if (index !== -1) {\n        this.cargos[index] = updatedCargo;\n      }\n    }, error => console.error(error));\n  }\n  eliminarCargo(id) {\n    this.cargoService.deleteCargo(id).subscribe(() => {\n      this.cargos = this.cargos.filter(c => c.id !== id);\n    }, error => console.error(error));\n  }\n}\nCargoComponent.ɵfac = function CargoComponent_Factory(t) {\n  return new (t || CargoComponent)(i0.ɵɵdirectiveInject(i1.CargoService));\n};\nCargoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CargoComponent,\n  selectors: [[\"app-cargo\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"nombre\"], [\"type\", \"text\", \"id\", \"nombre\", \"name\", \"nombre\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function CargoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Listado de Cargos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Nombre\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tbody\");\n      i0.ɵɵtemplate(11, CargoComponent_tr_11_Template, 5, 2, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"h3\");\n      i0.ɵɵtext(13, \"Agregar Nuevo Cargo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"form\", 3);\n      i0.ɵɵlistener(\"submit\", function CargoComponent_Template_form_submit_14_listener() {\n        return ctx.crearCargo();\n      });\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n      i0.ɵɵtext(17, \"Nombre:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CargoComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.nuevoCargo.nombre = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 7);\n      i0.ɵɵtext(20, \"Crear Cargo\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cargos);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevoCargo.nombre);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":";;;;;;IAWQA,0BAAiC;IAC3BA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;;;;IADvBA,eAAc;IAAdA,iCAAc;IACdA,eAAkB;IAAlBA,qCAAkB;;;ACFhC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAHhC,WAAM,GAAY,EAAE;IACpB,eAAU,GAAU;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAE,CAAC,CAAC;EAEO;;EAElDC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACJ,YAAY,CAACI,YAAY,EAAE,CAACC,SAAS,CACxCC,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,EAC9BC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAE,UAAU;IACR,IAAI,CAACT,YAAY,CAACU,WAAW,CAAC,IAAI,CAACC,UAAU,CAAC,CAACN,SAAS,CACtDO,KAAK,IAAG;MACN,IAAI,CAACN,MAAM,CAACO,IAAI,CAACD,KAAK,CAAC;MACvB,IAAI,CAACD,UAAU,GAAG;QAAEV,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAE,CAAC,CAAC;IAC3C,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAO,eAAe,CAACb,EAAU,EAAEW,KAAY;IACtC,IAAI,CAACZ,YAAY,CAACe,WAAW,CAACd,EAAE,EAAEW,KAAK,CAAC,CAACP,SAAS,CAChDW,YAAY,IAAG;MACb,MAAMC,KAAK,GAAG,IAAI,CAACX,MAAM,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE,CAAC;MACrD,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACX,MAAM,CAACW,KAAK,CAAC,GAAGD,YAAY;;IAErC,CAAC,EACDT,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAa,aAAa,CAACnB,EAAU;IACtB,IAAI,CAACD,YAAY,CAACqB,WAAW,CAACpB,EAAE,CAAC,CAACI,SAAS,CACzC,MAAK;MACH,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACgB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE,CAAC;IACpD,CAAC,EACDM,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;;AA9CWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX3B9B,8BAAuB;MACfA,iCAAiB;MAAAA,iBAAK;MAC1BA,gCAAqB;MAGXA,kBAAE;MAAAA,iBAAK;MACXA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MAInBA,8BAAO;MACLA,+DAIK;MACPA,iBAAQ;MAIVA,2BAAI;MAAAA,oCAAmB;MAAAA,iBAAK;MAC5BA,gCAA8B;MAAxBA;QAAA,OAAU+B,gBAAY;MAAA,EAAC;MAC3B/B,+BAAwB;MACFA,wBAAO;MAAAA,iBAAQ;MACnCA,iCAA2G;MAAvDA;QAAA;MAAA,EAA+B;MAAnFA,iBAA2G;MAG7GA,kCAA8C;MAAAA,4BAAW;MAAAA,iBAAS;;;MAhB1CA,gBAAS;MAATA,oCAAS;MAaqBA,eAA+B;MAA/BA,+CAA+B","names":["i0","CargoComponent","constructor","cargoService","id","nombre","ngOnInit","getAllCargos","subscribe","cargos","error","console","crearCargo","createCargo","nuevoCargo","cargo","push","actualizarCargo","updateCargo","updatedCargo","index","findIndex","c","eliminarCargo","deleteCargo","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\cargos\\cargo.component.html","E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\cargos\\cargo.component.ts"],"sourcesContent":["<div class=\"container\">\r\n    <h2>Listado de Cargos</h2>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nombre</th>\r\n          <!-- Otros campos del cargo según tus necesidades -->\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let cargo of cargos\">\r\n          <td>{{ cargo.id }}</td>\r\n          <td>{{ cargo.nombre }}</td>\r\n          <!-- Aquí puedes mostrar otros campos del cargo -->\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  \r\n    <!-- Formulario para agregar un nuevo cargo -->\r\n    <h3>Agregar Nuevo Cargo</h3>\r\n    <form (submit)=\"crearCargo()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nombre\" [(ngModel)]=\"nuevoCargo.nombre\" name=\"nombre\" required>\r\n      </div>\r\n      <!-- Otros campos del formulario según los atributos del modelo Cargo -->\r\n      <button type=\"submit\" class=\"btn btn-primary\">Crear Cargo</button>\r\n    </form>\r\n  </div>\r\n  ","// cargo.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Cargo } from '../models/cargo.model';\r\nimport { CargoService } from '../cargos/cargo.service';\r\n\r\n@Component({\r\n  selector: 'app-cargo',\r\n  templateUrl: './cargo.component.html',\r\n  styleUrls: ['./cargo.component.css']\r\n})\r\nexport class CargoComponent implements OnInit {\r\n  cargos: Cargo[] = [];\r\n  nuevoCargo: Cargo = { id: 0, nombre: '' }; // Inicialización con valores predeterminados\r\n\r\n  constructor(private cargoService: CargoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCargos();\r\n  }\r\n\r\n  getAllCargos(): void {\r\n    this.cargoService.getAllCargos().subscribe(\r\n      cargos => this.cargos = cargos,\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  crearCargo(): void {\r\n    this.cargoService.createCargo(this.nuevoCargo).subscribe(\r\n      cargo => {\r\n        this.cargos.push(cargo);\r\n        this.nuevoCargo = { id: 0, nombre: '' }; // Limpiar el formulario\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  actualizarCargo(id: number, cargo: Cargo): void {\r\n    this.cargoService.updateCargo(id, cargo).subscribe(\r\n      updatedCargo => {\r\n        const index = this.cargos.findIndex(c => c.id === id);\r\n        if (index !== -1) {\r\n          this.cargos[index] = updatedCargo;\r\n        }\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  eliminarCargo(id: number): void {\r\n    this.cargoService.deleteCargo(id).subscribe(\r\n      () => {\r\n        this.cargos = this.cargos.filter(c => c.id !== id);\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}