{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/rol.service\";\nimport * as i2 from \"@angular/common\";\nfunction RolComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rol_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rol_r1.nombre);\n  }\n}\nexport class RolComponent {\n  constructor(rolService) {\n    this.rolService = rolService;\n    this.roles = [];\n    this.nuevoRol = {\n      id: 0,\n      rolName: ''\n    };\n  }\n  ngOnInit() {\n    this.getAllRoles();\n  }\n  getAllRoles() {\n    this.rolService.getAllRoles().subscribe(roles => this.roles = roles, error => console.error(error));\n  }\n  crearRol() {\n    this.rolService.createRol(this.nuevoRol).subscribe(rol => {\n      this.roles.push(rol);\n      this.nuevoRol = {\n        id: 0,\n        rolName: ''\n      };\n    }, error => console.error(error));\n  }\n  actualizarRol(id, rol) {\n    this.rolService.updateRol(id, rol).subscribe(updatedRol => {\n      const index = this.roles.findIndex(r => r.id === id);\n      if (index !== -1) {\n        this.roles[index] = updatedRol;\n      }\n    }, error => console.error(error));\n  }\n  eliminarRol(id) {\n    this.rolService.deleteRol(id).subscribe(() => {\n      this.roles = this.roles.filter(r => r.id !== id);\n    }, error => console.error(error));\n  }\n}\nRolComponent.ɵfac = function RolComponent_Factory(t) {\n  return new (t || RolComponent)(i0.ɵɵdirectiveInject(i1.RolService));\n};\nRolComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RolComponent,\n  selectors: [[\"app-rol\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function RolComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Roles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ul\");\n      i0.ɵɵtemplate(4, RolComponent_li_4_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"div[_ngcontent-%COMP%] {\\r\\n    background-color: #f0f0f0;\\r\\n    padding: 20px;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  h2[_ngcontent-%COMP%] {\\r\\n    color: #333;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n  \\r\\n  ul[_ngcontent-%COMP%] {\\r\\n    list-style-type: none;\\r\\n    padding: 0;\\r\\n  }\\r\\n  \\r\\n  li[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 5px;\\r\\n    color: #666;\\r\\n  }\\r\\n  \\r\\n  li[_ngcontent-%COMP%]::before {\\r\\n    content: '\\u25B8';\\r\\n    margin-right: 5px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcm9sL3JvbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjs7QUFFdEI7SUFDSSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFVBQVU7RUFDWjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxZQUFZO0lBQ1osaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLyogcm9sLmNvbXBvbmVudC5jc3MgKi9cclxuXHJcbmRpdiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG4gIFxyXG4gIGgyIHtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgdWwge1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgcGFkZGluZzogMDtcclxuICB9XHJcbiAgXHJcbiAgbGkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgY29sb3I6ICM2NjY7XHJcbiAgfVxyXG4gIFxyXG4gIGxpOjpiZWZvcmUge1xyXG4gICAgY29udGVudDogJ8OiwpbCuCc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAKMA,0BAA8B;IAAAA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,mCAAgB;;;ACIpD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B,UAAK,GAAU,EAAE;IACjB,aAAQ,GAAQ;MAAEC,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAE;EAEQ;EAE9CC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACJ,UAAU,CAACI,WAAW,EAAE,CAACC,SAAS,CACrCC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,EAC3BC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAE,QAAQ;IACN,IAAI,CAACT,UAAU,CAACU,SAAS,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACN,SAAS,CAChDO,GAAG,IAAG;MACJ,IAAI,CAACN,KAAK,CAACO,IAAI,CAACD,GAAG,CAAC;MACpB,IAAI,CAACD,QAAQ,GAAG;QAAEV,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAE,CAAE;IACxC,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAO,aAAa,CAACb,EAAU,EAAEW,GAAQ;IAChC,IAAI,CAACZ,UAAU,CAACe,SAAS,CAACd,EAAE,EAAEW,GAAG,CAAC,CAACP,SAAS,CAC1CW,UAAU,IAAG;MACX,MAAMC,KAAK,GAAG,IAAI,CAACX,KAAK,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE,CAAC;MACpD,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACX,KAAK,CAACW,KAAK,CAAC,GAAGD,UAAU;;IAElC,CAAC,EACDT,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAa,WAAW,CAACnB,EAAU;IACpB,IAAI,CAACD,UAAU,CAACqB,SAAS,CAACpB,EAAE,CAAC,CAACI,SAAS,CACrC,MAAK;MACH,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACgB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE,CAAC;IAClD,CAAC,EACDM,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;;AA9CWT,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzB9B,2BAAK;MACGA,qBAAK;MAAAA,iBAAK;MACdA,0BAAI;MACFA,2DAAmD;MACrDA,iBAAK;;;MADiBA,eAAQ;MAARA,mCAAQ","names":["i0","RolComponent","constructor","rolService","id","rolName","ngOnInit","getAllRoles","subscribe","roles","error","console","crearRol","createRol","nuevoRol","rol","push","actualizarRol","updateRol","updatedRol","index","findIndex","r","eliminarRol","deleteRol","filter","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\rol\\rol.component.html","E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\rol\\rol.component.ts"],"sourcesContent":["<!-- rol.component.html -->\r\n\r\n<div>\r\n    <h2>Roles</h2>\r\n    <ul>\r\n      <li *ngFor=\"let rol of roles\">{{ rol.nombre }}</li>\r\n    </ul>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { Rol } from '../models/rol.model';\r\nimport { RolService } from '../services/rol.service';\r\n\r\n@Component({\r\n  selector: 'app-rol',\r\n  templateUrl: './rol.component.html',\r\n  styleUrls: ['./rol.component.css']\r\n})\r\nexport class RolComponent implements OnInit {\r\n  roles: Rol[] = [];\r\n  nuevoRol: Rol = { id: 0, rolName: '' };\r\n\r\n  constructor(private rolService: RolService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllRoles();\r\n  }\r\n\r\n  getAllRoles(): void {\r\n    this.rolService.getAllRoles().subscribe(\r\n      roles => this.roles = roles,\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  crearRol(): void {\r\n    this.rolService.createRol(this.nuevoRol).subscribe(\r\n      rol => {\r\n        this.roles.push(rol);\r\n        this.nuevoRol = { id: 0, rolName: '' };\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  actualizarRol(id: number, rol: Rol): void {\r\n    this.rolService.updateRol(id, rol).subscribe(\r\n      updatedRol => {\r\n        const index = this.roles.findIndex(r => r.id === id);\r\n        if (index !== -1) {\r\n          this.roles[index] = updatedRol;\r\n        }\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  eliminarRol(id: number): void {\r\n    this.rolService.deleteRol(id).subscribe(\r\n      () => {\r\n        this.roles = this.roles.filter(r => r.id !== id);\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}