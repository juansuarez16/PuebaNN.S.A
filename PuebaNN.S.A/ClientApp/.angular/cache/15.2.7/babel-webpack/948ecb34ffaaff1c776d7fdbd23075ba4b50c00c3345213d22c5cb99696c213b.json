{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/empleado.service\";\nimport * as i2 from \"../../cargos/cargo.service\";\nimport * as i3 from \"../../services/rol.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction CrearEmpleadoComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cargo_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cargo_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cargo_r3.nombre);\n  }\n}\nfunction CrearEmpleadoComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rol_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", rol_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rol_r4.rolName);\n  }\n}\nexport class CrearEmpleadoComponent {\n  constructor(empleadoService, cargoService, rolService, router) {\n    this.empleadoService = empleadoService;\n    this.cargoService = cargoService;\n    this.rolService = rolService;\n    this.router = router;\n    this.nuevaSolicitud = {\n      empleado: {\n        updateDate: new Date(),\n        createDate: new Date(),\n        cedula: 0,\n        nombre: '',\n        rutaFoto: '',\n        fechaIngreso: new Date(),\n        cargoId: 0,\n        rolId: 0\n      },\n      usuario: {\n        updateDate: new Date(),\n        createDate: new Date(),\n        usuario: '',\n        contrasena: ''\n      },\n      rol: 0\n    };\n    this.cargos = [];\n    this.roles = [];\n  }\n  ngOnInit() {\n    // Obtener la lista de cargos\n    this.cargoService.getAllCargos().subscribe(cargos => this.cargos = cargos);\n    // Obtener la lista de roles\n    this.rolService.getAllRoles().subscribe(roles => this.roles = roles);\n  }\n  volver() {\n    this.router.navigate(['/empleados']); // Redirige al usuario al formulario de creación de empleados\n  }\n\n  crearEmpleado() {\n    // Llamar al servicio para crear un nuevo empleado\n    console.log('Empleado creado:', this.nuevaSolicitud);\n    this.empleadoService.createEmpleado(this.nuevaSolicitud).subscribe(empleadoCreado => {\n      console.log('Empleado creado:', empleadoCreado);\n      // Aquí podrías agregar lógica adicional, como redirigir a la página de lista de empleados\n    }, error => {\n      console.error('Error al crear empleado:', error);\n      // Aquí podrías manejar el error de alguna manera (por ejemplo, mostrar un mensaje al usuario)\n    });\n  }\n  // Método para manejar la selección de un archivo para la foto\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    // Aquí puedes agregar lógica para convertir el archivo a base64 y asignarlo al campo de la ruta de la foto\n  }\n}\n\nCrearEmpleadoComponent.ɵfac = function CrearEmpleadoComponent_Factory(t) {\n  return new (t || CrearEmpleadoComponent)(i0.ɵɵdirectiveInject(i1.EmpleadoService), i0.ɵɵdirectiveInject(i2.CargoService), i0.ɵɵdirectiveInject(i3.RolService), i0.ɵɵdirectiveInject(i4.Router));\n};\nCrearEmpleadoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CrearEmpleadoComponent,\n  selectors: [[\"app-crear-empleado\"]],\n  decls: 40,\n  vars: 10,\n  consts: [[3, \"ngSubmit\"], [\"formularioEmpleado\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"cedula\"], [\"type\", \"number\", \"id\", \"cedula\", \"name\", \"cedula\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"nombre\"], [\"type\", \"text\", \"id\", \"nombre\", \"name\", \"nombre\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"rutaFoto\"], [\"type\", \"text\", \"id\", \"rutaFoto\", \"name\", \"rutaFoto\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"fechaIngreso\"], [\"type\", \"datetime-local\", \"id\", \"fechaIngreso\", \"name\", \"fechaIngreso\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"cargoId\"], [\"id\", \"cargoId\", \"name\", \"cargoId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"usuario\"], [\"type\", \"text\", \"id\", \"usuario\", \"name\", \"usuario\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"contrasena\"], [\"type\", \"password\", \"id\", \"contrasena\", \"name\", \"contrasena\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"rolId\"], [\"id\", \"rolId\", \"name\", \"rolId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n  template: function CrearEmpleadoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CrearEmpleadoComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.crearEmpleado();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"C\\u00E9dula:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.nuevaSolicitud.cedula = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Nombre:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.nuevaSolicitud.nombre = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Foto:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.nuevaSolicitud.rutaFoto = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Fecha de Ingreso:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.nuevaSolicitud.fechaIngreso = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Cargo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_select_ngModelChange_21_listener($event) {\n        return ctx.nuevaSolicitud.cargoId = $event;\n      });\n      i0.ɵɵtemplate(22, CrearEmpleadoComponent_option_22_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 2)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Usuario:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.nuevaSolicitud.usuario = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 2)(28, \"label\", 16);\n      i0.ɵɵtext(29, \"Contrase\\u00F1a:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.nuevaSolicitud.contrasena = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 2)(32, \"label\", 18);\n      i0.ɵɵtext(33, \"Rol:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"select\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function CrearEmpleadoComponent_Template_select_ngModelChange_34_listener($event) {\n        return ctx.nuevaSolicitud.rolId = $event;\n      });\n      i0.ɵɵtemplate(35, CrearEmpleadoComponent_option_35_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function CrearEmpleadoComponent_Template_button_click_36_listener() {\n        return ctx.volver();\n      });\n      i0.ɵɵtext(37, \"Volver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"button\", 21);\n      i0.ɵɵtext(39, \"Crear Empleado\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.cedula);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.nombre);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.rutaFoto);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.fechaIngreso);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.cargoId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cargos);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.usuario);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.contrasena);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.nuevaSolicitud.rolId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.NumberValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: 0 auto;\\r\\n    padding: 20px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 5px;\\r\\n    background-color: #f9f9f9;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  .form-control[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    border: 1px solid #ccc;\\r\\n    border-radius: 4px;\\r\\n  }\\r\\n  \\r\\n  .btn-primary[_ngcontent-%COMP%] {\\r\\n    background-color: #007bff;\\r\\n    color: #fff;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    padding: 10px 20px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .btn-primary[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #0056b3;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbGVhZG8vY3JlYXIvY3JlYXItZW1wbGVhZG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUM7O0FBRWpDO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQix5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBjcmVhci1lbXBsZWFkby5jb21wb25lbnQuY3NzICovXHJcblxyXG4uZm9ybS1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCBsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tY29udHJvbCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIH1cclxuICBcclxuICAuYnRuLXByaW1hcnkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAuYnRuLXByaW1hcnk6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CrearEmpleadoComponent","constructor","empleadoService","cargoService","rolService","router","empleado","updateDate","Date","createDate","cedula","nombre","rutaFoto","fechaIngreso","cargoId","rolId","usuario","contrasena","rol","ngOnInit","getAllCargos","subscribe","cargos","getAllRoles","roles","volver","navigate","crearEmpleado","console","log","nuevaSolicitud","createEmpleado","empleadoCreado","error","onFileSelected","event","file","target","files","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\empleado\\crear\\crear-empleado.component.html","E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\empleado\\crear\\crear-empleado.component.ts"],"sourcesContent":["<form (ngSubmit)=\"crearEmpleado()\" #formularioEmpleado=\"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label for=\"cedula\">Cédula:</label>\r\n      <input type=\"number\" class=\"form-control\" id=\"cedula\" name=\"cedula\" [(ngModel)]=\"nuevaSolicitud.cedula\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"nombre\">Nombre:</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" [(ngModel)]=\"nuevaSolicitud.nombre\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"rutaFoto\">Foto:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"rutaFoto\" name=\"rutaFoto\" [(ngModel)]=\"nuevaSolicitud.rutaFoto\" required>\r\n      </div>    \r\n    <div class=\"form-group\">\r\n      <label for=\"fechaIngreso\">Fecha de Ingreso:</label>\r\n      <input type=\"datetime-local\" class=\"form-control\" id=\"fechaIngreso\" name=\"fechaIngreso\" [(ngModel)]=\"nuevaSolicitud.fechaIngreso\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"cargoId\">Cargo:</label>\r\n      <select class=\"form-control\" id=\"cargoId\" name=\"cargoId\" [(ngModel)]=\"nuevaSolicitud.cargoId\" required>\r\n        <option *ngFor=\"let cargo of cargos\" [value]=\"cargo.id\">{{ cargo.nombre }}</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"usuario\">Usuario:</label>\r\n      <input type=\"text\" class=\"form-control\" id=\"usuario\" name=\"usuario\" [(ngModel)]=\"nuevaSolicitud.usuario\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"contrasena\">Contraseña:</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"contrasena\" name=\"contrasena\" [(ngModel)]=\"nuevaSolicitud.contrasena\" required>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"rolId\">Rol:</label>\r\n      <select class=\"form-control\" id=\"rolId\" name=\"rolId\" [(ngModel)]=\"nuevaSolicitud.rolId\" required>\r\n        <option *ngFor=\"let rol of roles\" [value]=\"rol.id\">{{ rol.rolName }}</option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn btn-primary\" (click)=\"volver()\">Volver</button>\r\n    <button type=\"submit\" class=\"btn btn-primary\">Crear Empleado</button>\r\n  </form>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { EmpleadoService } from '../../services/empleado.service';\r\nimport { CargoService } from '../../cargos/cargo.service';\r\nimport { RolService } from '../../services/rol.service';\r\nimport { Empleado } from '../../models/empleado.model';\r\nimport { Cargo } from '../../models/cargo.model';\r\nimport { Rol } from '../../models/rol.model';\r\nimport { Router } from '@angular/router';\r\nimport { SolicitudCrearEmpleado } from 'src/app/models/solicitud-crear-empleado.model';\r\n@Component({\r\n  selector: 'app-crear-empleado',\r\n  templateUrl: './crear-empleado.component.html',\r\n  styleUrls: ['./crear-empleado.component.css']\r\n})\r\nexport class CrearEmpleadoComponent implements OnInit {\r\n    nuevaSolicitud: SolicitudCrearEmpleado = {\r\n        empleado: {\r\n          updateDate: new Date(),\r\n          createDate: new Date(),\r\n          cedula: 0,\r\n          nombre: '',\r\n          rutaFoto: '',\r\n          fechaIngreso: new Date(),\r\n          cargoId: 0,\r\n          rolId: 0\r\n        },\r\n        usuario: {\r\n          updateDate: new Date(),\r\n          createDate: new Date(),\r\n          usuario: '',\r\n          contrasena: ''\r\n        },\r\n        rol: 0\r\n      };\r\n  cargos: Cargo[] = [];\r\n    roles: Rol[] = [];\r\n\r\n  constructor(\r\n    private empleadoService: EmpleadoService,\r\n    private cargoService: CargoService,\r\n    private rolService: RolService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // Obtener la lista de cargos\r\n    this.cargoService.getAllCargos().subscribe(cargos => this.cargos = cargos);\r\n    // Obtener la lista de roles\r\n    this.rolService.getAllRoles().subscribe(roles => this.roles = roles);\r\n  }\r\n  volver(): void {\r\n    this.router.navigate(['/empleados']); // Redirige al usuario al formulario de creación de empleados\r\n  }\r\n  crearEmpleado(): void {\r\n    // Llamar al servicio para crear un nuevo empleado\r\n    console.log('Empleado creado:', this.nuevaSolicitud);\r\n    this.empleadoService.createEmpleado(this.nuevaSolicitud).subscribe(\r\n      empleadoCreado => {\r\n        console.log('Empleado creado:', empleadoCreado);\r\n        // Aquí podrías agregar lógica adicional, como redirigir a la página de lista de empleados\r\n      },\r\n      error => {\r\n        console.error('Error al crear empleado:', error);\r\n        // Aquí podrías manejar el error de alguna manera (por ejemplo, mostrar un mensaje al usuario)\r\n      }\r\n    );\r\n  }\r\n\r\n  // Método para manejar la selección de un archivo para la foto\r\n  onFileSelected(event: any): void {\r\n    const file: File = event.target.files[0];\r\n    // Aquí puedes agregar lógica para convertir el archivo a base64 y asignarlo al campo de la ruta de la foto\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}