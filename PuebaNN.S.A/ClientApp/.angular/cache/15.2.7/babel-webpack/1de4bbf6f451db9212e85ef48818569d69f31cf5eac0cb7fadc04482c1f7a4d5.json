{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmpleadoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7242/api/Empleados';\n  }\n  getEmpleados() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  eliminarEmpleado(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  actualizarEmpleado(empleado) {\n    return this.http.put(`${this.baseUrl}/${empleado.id}`, empleado);\n  }\n}\nEmpleadoService.ɵfac = function EmpleadoService_Factory(t) {\n  return new (t || EmpleadoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmpleadoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmpleadoService,\n  factory: EmpleadoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,sCAAsC;EAEhB;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,EAAE,CAAC;EAChD;EAEAC,gBAAgB,CAACC,EAAU;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,GAAG,IAAI,CAACH,OAAO,IAAIE,EAAE,EAAE,CAAC;EAClD;EAEAE,kBAAkB,CAACC,QAAa;IAC9B,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACN,OAAO,IAAIK,QAAQ,CAACH,EAAE,EAAE,EAAEG,QAAQ,CAAC;EAClE;;AAfWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;EAAAa,YAFd;AAAM","names":["EmpleadoService","constructor","http","getEmpleados","get","baseUrl","eliminarEmpleado","id","delete","actualizarEmpleado","empleado","put","factory","providedIn"],"sourceRoot":"","sources":["E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\services\\empleado.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmpleadoService {\r\n  private baseUrl = 'https://localhost:7242/api/Empleados';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEmpleados(): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.baseUrl}`);\r\n  }\r\n\r\n  eliminarEmpleado(id: number): Observable<any> {\r\n    return this.http.delete(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  actualizarEmpleado(empleado: any): Observable<any> {\r\n    return this.http.put(`${this.baseUrl}/${empleado.id}`, empleado);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}