{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RolComponent = class RolComponent {\n  constructor(rolService) {\n    this.rolService = rolService;\n    this.roles = [];\n    this.nuevoRol = {\n      id: 0,\n      nombre: ''\n    };\n  }\n  ngOnInit() {\n    this.getAllRoles();\n  }\n  getAllRoles() {\n    this.rolService.getAllRoles().subscribe(roles => this.roles = roles, error => console.error(error));\n  }\n  crearRol() {\n    this.rolService.createRol(this.nuevoRol).subscribe(rol => {\n      this.roles.push(rol);\n      this.nuevoRol = {\n        id: 0,\n        nombre: ''\n      };\n    }, error => console.error(error));\n  }\n  actualizarRol(id, rol) {\n    this.rolService.updateRol(id, rol).subscribe(updatedRol => {\n      const index = this.roles.findIndex(r => r.id === id);\n      if (index !== -1) {\n        this.roles[index] = updatedRol;\n      }\n    }, error => console.error(error));\n  }\n  eliminarRol(id) {\n    this.rolService.deleteRol(id).subscribe(() => {\n      this.roles = this.roles.filter(r => r.id !== id);\n    }, error => console.error(error));\n  }\n};\nRolComponent = __decorate([Component({\n  selector: 'app-rol',\n  templateUrl: './rol.component.html',\n  styleUrls: ['./rol.component.css']\n})], RolComponent);\nexport { RolComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B,UAAK,GAAU,EAAE;IACjB,aAAQ,GAAQ;MAAEC,EAAE,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAE;EAES;EAE9CC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACJ,UAAU,CAACI,WAAW,EAAE,CAACC,SAAS,CACrCC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,EAC3BC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAE,QAAQ;IACN,IAAI,CAACT,UAAU,CAACU,SAAS,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACN,SAAS,CAChDO,GAAG,IAAG;MACJ,IAAI,CAACN,KAAK,CAACO,IAAI,CAACD,GAAG,CAAC;MACpB,IAAI,CAACD,QAAQ,GAAG;QAAEV,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAE;IACvC,CAAC,EACDK,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAO,aAAa,CAACb,EAAU,EAAEW,GAAQ;IAChC,IAAI,CAACZ,UAAU,CAACe,SAAS,CAACd,EAAE,EAAEW,GAAG,CAAC,CAACP,SAAS,CAC1CW,UAAU,IAAG;MACX,MAAMC,KAAK,GAAG,IAAI,CAACX,KAAK,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE,CAAC;MACpD,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB,IAAI,CAACX,KAAK,CAACW,KAAK,CAAC,GAAGD,UAAU;;IAElC,CAAC,EACDT,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEAa,WAAW,CAACnB,EAAU;IACpB,IAAI,CAACD,UAAU,CAACqB,SAAS,CAACpB,EAAE,CAAC,CAACI,SAAS,CACrC,MAAK;MACH,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACgB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE,CAAC;IAClD,CAAC,EACDM,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;CACD;AA/CYT,YAAY,eALxBD,SAAS,CAAC;EACT0B,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACW3B,YAAY,CA+CxB;SA/CYA,YAAY","names":["Component","RolComponent","constructor","rolService","id","nombre","ngOnInit","getAllRoles","subscribe","roles","error","console","crearRol","createRol","nuevoRol","rol","push","actualizarRol","updateRol","updatedRol","index","findIndex","r","eliminarRol","deleteRol","filter","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\PruebaTecnicaCastor\\PuebaNN.S.A\\PuebaNN.S.A\\ClientApp\\src\\app\\rol\\rol.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Rol } from '../models/rol.model';\r\nimport { RolService } from '../services/rol.service';\r\n\r\n@Component({\r\n  selector: 'app-rol',\r\n  templateUrl: './rol.component.html',\r\n  styleUrls: ['./rol.component.css']\r\n})\r\nexport class RolComponent implements OnInit {\r\n  roles: Rol[] = [];\r\n  nuevoRol: Rol = { id: 0, nombre: '' };\r\n\r\n  constructor(private rolService: RolService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllRoles();\r\n  }\r\n\r\n  getAllRoles(): void {\r\n    this.rolService.getAllRoles().subscribe(\r\n      roles => this.roles = roles,\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  crearRol(): void {\r\n    this.rolService.createRol(this.nuevoRol).subscribe(\r\n      rol => {\r\n        this.roles.push(rol);\r\n        this.nuevoRol = { id: 0, nombre: '' };\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  actualizarRol(id: number, rol: Rol): void {\r\n    this.rolService.updateRol(id, rol).subscribe(\r\n      updatedRol => {\r\n        const index = this.roles.findIndex(r => r.id === id);\r\n        if (index !== -1) {\r\n          this.roles[index] = updatedRol;\r\n        }\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  eliminarRol(id: number): void {\r\n    this.rolService.deleteRol(id).subscribe(\r\n      () => {\r\n        this.roles = this.roles.filter(r => r.id !== id);\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}